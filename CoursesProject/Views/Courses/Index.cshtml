@using Microsoft.AspNetCore.Identity;
@inject SignInManager<CoursesProject.Data.AppUser> _signInManager
@model IEnumerable<CoursesProject.Models.Course>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
@if (_signInManager.IsSignedIn(User))
{
    <p>
        <a asp-action="Create" class="btn btn-outline-dark">Create New</a>
    </p>

}
<table class="table">
    <thead class="thead-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CourseName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Trainer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                Operations
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.CourseName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Trainer.TrainerName)
                </td>
                <td>
                    <a asp-action="Details" asp-controller="Categories" asp-route-id="@item.Category.Id">
                        @Html.DisplayFor(modelItem => item.Category.CategoryName)
                    </a>
                </td>
                <td>
                    @if (User.IsInRole("Administrator"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-warning">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger">Delete</a>
                    }
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-info">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
